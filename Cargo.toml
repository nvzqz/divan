[package]
name = "divan"
version = "0.1.21"
rust-version = "1.80.0"
edition = "2021"
authors = ["Nikolai Vazquez"]
license = "MIT OR Apache-2.0"
description = "Statistically-comfy benchmarking library."
repository = "https://github.com/nvzqz/divan"
homepage = "https://github.com/nvzqz/divan"
documentation = "https://docs.rs/divan"
categories = ["development-tools::profiling"]
keywords = ["benchmark", "criterion", "instrument", "measure", "performance"]
readme = "README.md"

[features]
default = ["wrap_help"]
help = ["clap/help"]
wrap_help = ["help", "clap/wrap_help"]

# Opt out of faster static thread-local access and instead always dynamically
# allocate thread-local storage.
#
# On x86_64 macOS we use TLS key 11 (reserved for Windows ABI compatability):
# https://github.com/apple-oss-distributions/libpthread/blob/libpthread-519/private/pthread/tsd_private.h#L99
dyn_thread_local = []

# Benchmark internals. Not meant for public use.
internal_benches = []

[dependencies]
divan-macros = { version = "=0.1.21", path = "macros" }

cfg-if = "1"
clap = { version = "4", default-features = false, features = ["std", "env"] }
condtype = "1.3"
regex = { package = "regex-lite", version = "0.1", default-features = false, features = ["std", "string"] }

[target.'cfg(unix)'.dependencies]
libc = { workspace = true }

[target.'cfg(not(miri))'.dev-dependencies]
mimalloc = "0.1"

[workspace]
members = ["macros", "examples", "internal_benches"]

[workspace.dependencies]
divan = { path = "." }
libc = "0.2.148"
